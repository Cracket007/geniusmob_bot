from openai import OpenAI
from telebot import TeleBot
from telebot.types import Message
from src.utils.helpers import (
    add_to_chat_history, 
    chat_histories,
    chat_contexts
)
from config import SYSTEM_INSTRUCTION, ADMIN_ID, OPENAI_API_KEY

# –°–∞–º–∞—è –ø—Ä–æ—Å—Ç–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
client = OpenAI()

def handle_message(bot: TeleBot, message: Message):
    try:
        user_id = message.from_user.id
        user_message = message.text
        
        add_to_chat_history(user_id, "user", user_message)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–µ—Å–µ–¥—ã
        context = chat_contexts.get(user_id, "–ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
        full_instruction = f"""{SYSTEM_INSTRUCTION}

–¢–ï–ö–£–©–ò–ô –ö–û–ù–¢–ï–ö–°–¢ –ë–ï–°–ï–î–´:
{context}

–ù–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é."""

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è API
        messages = [
            {"role": "system", "content": full_instruction}
        ] + chat_histories[user_id][-3:]  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–æ–æ–±—â–µ–Ω–∏—è
        
        print("\n–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ OpenAI:")
        print(f"–ö–æ–Ω—Ç–µ–∫—Å—Ç –±–µ—Å–µ–¥—ã: {chat_contexts.get(user_id, '–Ω–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞')}")
        for msg in messages:
            print(f"{msg['role']}: {msg['content']}\n")
        
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=messages
        )
        
        ai_response = response.choices[0].message.content
        add_to_chat_history(user_id, "assistant", ai_response)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏
        if "[[CREATE_REPAIR_REQUEST]]" in ai_response:
            # –£–¥–∞–ª—è–µ–º –º–µ—Ç–∫—É –∏–∑ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            clean_response = ai_response.replace("[[CREATE_REPAIR_REQUEST]]", "")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—è–≤–∫–µ
            repair_info = extract_repair_info(chat_histories[user_id])
            admin_message = format_repair_request(repair_info)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω—É
            bot.send_message(ADMIN_ID, admin_message)
            bot.reply_to(message, clean_response)
        else:
            bot.reply_to(message, ai_response)
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {str(e)}")
        bot.reply_to(message, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.")

def extract_repair_info(chat_history):
    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–ò–∑–≤–ª–µ–∫–∏—Ç–µ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞: –º–æ–¥–µ–ª—å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã. –í–µ—Ä–Ω–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON."},
                {"role": "user", "content": str(chat_history)}
            ]
        )
        return response.choices[0].message.content
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {str(e)}")
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏"

def format_repair_request(repair_info):
    return f"""
üì± –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–º–æ–Ω—Ç!

{repair_info}
    """ 